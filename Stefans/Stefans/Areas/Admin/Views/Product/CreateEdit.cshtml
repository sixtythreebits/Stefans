@using Stefans.Reusable
@model Product
@{
    var ingredients = ViewBag.Ingredients as List<Dictionary>;
    var selectedIngredients = Model != null && Model.Ingredients != null ? Model.Ingredients : new List<Dictionary>();
}

<div class="row">
    <div class="col-lg-12">
        <h1> Product <small> Create </small></h1>
    </div>
</div>

<div class="row">
    <div class="col-lg-7">
        <form action="@Url.Action("Save", "Product")" method="POST" role="form" enctype="multipart/form-data">

            @if (Model != null && Model.ID > 0)
            {
                @Html.HiddenFor(m => m.ID)
            }

            @InputHelpers.RenderTextBox(Html, "Caption", m => m.Caption)

            @InputHelpers.RenderNumericTextBox(Html, "Price", m => m.Price)

            @InputHelpers.RenderTextArea(Html, "Description", m => m.Description)

            @InputHelpers.RenderTextArea(Html, "Instructions", m => m.Instruction)
            
            @InputHelpers.RenderCheckBox(Html, "Feature", m => m.IsFeature)
            
            @if (Model != null && !string.IsNullOrWhiteSpace(Model.Image))
            {
                <div>
                    <img style="height: 200px" src="@string.Concat(ConfigAssistant.ProductsFolderRelativePath, Model.Image)" alt="" />
                </div>
            }

            <div class="form-group @( Html.HasPropertyError(m => m.Image) ? "has-error" : "" )">
                <label class="control-label" for="Upload">
                    Image
                </label>
                <div>
                    <input type="file" name="Upload" />
                </div>
                <div>
                    @Html.ValidationMessageFor(m => m.Image)
                </div>
            </div>

            @if (ingredients != null)
            {
                <div class="form-group">
                    <label>Ingredients</label>

                    @for (var i = 0; i < ingredients.Count; i++)
                    {
                        var ingredient = ingredients[i];
                        <div class="checkbox">
                            <label>
                                <input type="checkbox"
                                       name="@Html.NameFor(m => m.Ingredients[i].ID)"
                                       value="@ingredient.ID"
                                       @( selectedIngredients.Any(ing => ing.ID == ingredient.ID) ? "checked" : "")>
                                @ingredient.Caption
                            </label>
                            <input type="hidden" name="Ingredients.Index" value="@i" />
                        </div>
                    }
                </div>
            }

            <button type="submit" class="btn btn-default"> Save </button>
        </form>
    </div>
</div>