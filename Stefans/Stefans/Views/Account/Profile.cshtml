@using Core.CM
@model ProfileModel
@{
    var states = ViewBag.States as List<Dictionary>;
    var orders = ViewBag.Orders as List<Order>;
    var accountFormValid = ViewBag.AccountFormValid != false;
    var passwordFormValid = ViewBag.PasswordFormValid != false;    
}

@Html.Partial("_SuccessError")

<section class="account">
    <h1 class="title">account</h1>

    <div class="col2 cl">
        <div class="form border">
            <form method="POST" action="@Url.Action("UpdateProfile", "Account")">
                <h5>ACCOUNT INFORMATION</h5>

                @if (!accountFormValid)
                {
                    <p class="error">
                        @string.Join(" ", ViewData.ModelState.SelectMany(p => p.Value.Errors.Select(e => e.ErrorMessage)))
                    </p>
                }

                <div class="cl">
                    <div class="@( Html.HasPropertyError(m => m.AccountModel.FirstName) ? "error" : "")">
                        @Html.TextBoxFor(m => m.AccountModel.FirstName, new { placeholder = "First Name" })
                    </div>

                    <div class="@( Html.HasPropertyError(m => m.AccountModel.LastName) ? "error" : "")">
                        @Html.TextBoxFor(m => m.AccountModel.LastName, new { placeholder = "Last Name" })
                    </div>
                </div>
                <div class="@( Html.HasPropertyError(m => m.AccountModel.Address1) ? "error" : "")">
                    @Html.TextBoxFor(m => m.AccountModel.Address1, new { placeholder = "Address Line 1" })
                </div>
                <div class="@( Html.HasPropertyError(m => m.AccountModel.Address2) ? "error" : "")">
                    @Html.TextBoxFor(m => m.AccountModel.Address2, new { placeholder = "Address Line 2" })
                </div>
                <div class="cl">
                    <div class="@( Html.HasPropertyError(m => m.AccountModel.City) ? "error" : "")">
                        @Html.TextBoxFor(m => m.AccountModel.City, new { placeholder = "City" })
                    </div>

                    <div class="@( Html.HasPropertyError(m => m.AccountModel.Zip) ? "error" : "")">
                        @Html.TextBoxFor(m => m.AccountModel.Zip, new { placeholder = "Zip Code", maxlength = 5 })
                    </div>
                </div>
                <div class="cl">
                    <div class="@( Html.HasPropertyError(m => m.AccountModel.StateID) ? "error" : "")">
                        <div class="select">
                            <p data-placeholder="State"></p>
                            <span></span>
                            @Html.DropDownListFor(m => m.AccountModel.StateID, states.ToSelectList(m => m.ID, m => m.Caption), string.Empty)
                        </div>
                    </div>

                    <div class="@( Html.HasPropertyError(m => m.AccountModel.Phone) ? "error" : "")">
                        @Html.TextBoxFor(m => m.AccountModel.Phone, new { placeholder = "Phone Number" })
                    </div>
                </div>
                <input type="submit" value="save" />
            </form>
        </div>
        <div class="form">
            <form method="POST" action="@Url.Action("ChangePassword", "Account")">
                <h5>CHANGE PASSWORD</h5>

                @if (!passwordFormValid)
                {
                    <p class="error">
                        @string.Join(" ", ViewData.ModelState.SelectMany(p => p.Value.Errors.Select(e => e.ErrorMessage)))
                    </p>
                }

                <div class="@( Html.HasPropertyError(m => m.PasswordModel.OriginalPassword) ? "error" : "")">
                    @Html.PasswordFor(m => m.PasswordModel.OriginalPassword, new { placeholder = "Old Password" })
                </div>
                <div class="cl">
                    <div class="@( Html.HasPropertyError(m => m.PasswordModel.NewPassword) ? "error" : "")">
                        @Html.PasswordFor(m => m.PasswordModel.NewPassword, new { placeholder = "New Password" })
                    </div>

                    <div class="@( Html.HasPropertyError(m => m.PasswordModel.ConfirmPassword) ? "error" : "")">
                        @Html.PasswordFor(m => m.PasswordModel.ConfirmPassword, new { placeholder = "Once Again" })
                    </div>
                </div>
                <input type="submit" value="save" />
            </form>
        </div>
    </div>
</section>

@if (orders != null && orders.Any())
{
    <aside class="orders">
        <h5>order history</h5>
        <div class="grid">
            <ul>
                <li class="header">
                    <span>Order Date</span>
                    <span>Order Number</span>
                    <span>Items</span>
                    <span>Total</span>
                    <span>Status</span>
                </li>

                @foreach (var item in orders)
                {
                    <li>
                        <span> @item.CRTime.Value.ToString(ViewBag.DateFormat) </span>
                        <span> <a href="@Url.Action("OrderDetails", "Account", new { ID = item.ID})"> @item.IDString </a></span>
                        
                        <span> @item.ItemCount </span>
                        <span> @string.Format("{0:C}", item.TotalPrice) </span>
                        <span> @item.StatusCaption </span>
                    </li>
                }
            </ul>
        </div>
    </aside>
}